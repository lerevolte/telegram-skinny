from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

from keyboards.inline import get_start_keyboard, get_subscription_keyboard
from core.services.user_service import UserService
from states.user_states import OnboardingStates

router = Router()
user_service = UserService()

@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = await user_service.get_or_create_user(
        telegram_id=message.from_user.id,
        username=message.from_user.username,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name
    )
    
    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã\n\n"
        "–Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å-–ø–æ–º–æ—â–Ω–∏–∫ ¬´–§–æ—Ä–º–∞ –∑–∞ 90 –¥–Ω–µ–π¬ª.\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ:\n"
        "‚úÖ –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è\n"
        "‚úÖ –ü–æ–¥–æ–±—Ä–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n"
        "‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\n"
        "‚úÖ –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω –ø–æ–¥ —Ç–≤–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n\n"
        "–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é?"
    )
    
    await message.answer(
        welcome_text,
        reply_markup=get_start_keyboard(has_subscription=user.status == "active")
    )

@router.callback_query(F.data == "start_trial")
async def start_trial(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞"""
    await callback.message.edit_text(
        "–û—Ç–ª–∏—á–Ω–æ! –ù–∞—á–Ω–µ–º —Å –±—ã—Å—Ç—Ä–æ–≥–æ –æ–ø—Ä–æ—Å–∞, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω.\n\n"
        "–≠—Ç–æ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ 2-3 –º–∏–Ω—É—Ç—ã.",
        reply_markup=None
    )
    
    await callback.message.answer("–£–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª:", reply_markup=get_gender_keyboard())
    await state.set_state(OnboardingStates.gender)

@router.callback_query(F.data == "buy_subscription")
async def show_subscription_plans(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–ª–∞–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏"""
    text = (
        "üíé –í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–ª–∞–Ω:\n\n"
        "üìÖ **–ú–µ—Å—è—Ü** ‚Äî 1 290 ‚ÇΩ\n"
        "–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–∞ 30 –¥–Ω–µ–π\n\n"
        "üìÖ **3 –º–µ—Å—è—Ü–∞** ‚Äî 3 490 ‚ÇΩ (—ç–∫–æ–Ω–æ–º–∏—è 380 ‚ÇΩ)\n"
        "–õ—É—á—à–∏–π –≤—ã–±–æ—Ä –¥–ª—è –≤–∏–¥–∏–º—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\n\n"
        "üìÖ **–ì–æ–¥** ‚Äî 12 390 ‚ÇΩ (—ç–∫–æ–Ω–æ–º–∏—è 3 090 ‚ÇΩ)\n"
        "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã–≥–æ–¥–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏\n\n"
        "‚úÖ –í—Å–µ –ø–ª–∞–Ω—ã –≤–∫–ª—é—á–∞—é—Ç:\n"
        "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\n"
        "‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n"
        "‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É\n"
        "‚Ä¢ –ê–¥–∞–ø—Ç–∞—Ü–∏—é –ø–æ–¥ —Ç–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_subscription_keyboard(),
        parse_mode="Markdown"
    )