services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: fitness_bot_postgres
    environment:
      POSTGRES_DB: fitness_bot
      POSTGRES_USER: fitness_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-strongpassword}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - fitness_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fitness_user -d fitness_bot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis для кеша и FSM storage
  redis:
    image: redis:7-alpine
    container_name: fitness_bot_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - fitness_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Telegram Bot
  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: fitness_bot_telegram
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql+asyncpg://fitness_user:${DB_PASSWORD:-strongpassword}@postgres:5432/fitness_bot
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./bot:/app/bot
      - ./core:/app/core
      - ./logs:/app/logs
    networks:
      - fitness_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  fitness_network:
    driver: bridge